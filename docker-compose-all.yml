version: '3.7'
services:
  ego-ui:
    image: overture/ego-ui:edge
    expose:
      - "8080"
    ports:
      - "8080:8080"
    environment:
      REACT_APP_API: http://localhost:8081
      REACT_APP_EGO_CLIENT_ID: ego-ui
  api:
    # change the image tag to the target image as needed
    image: overture/ego:latest
    environment:
      SERVER_PORT: 8081
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/ego?stringtype=unspecified
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_FLYWAY_ENABLED: "true"
      SPRING_FLYWAY_LOCATIONS: "classpath:flyway/sql,classpath:db/migration"
      SPRING_PROFILES_ACTIVE: auth

      # example on how to configure ego google oauth2 login
      spring.security.oauth2.client.registration.google.clientId : ".."
      spring.security.oauth2.client.registration.google.clientSecret: ".."
      # this should be registered as the authorized redirect URI in google cloud console
      spring.security.oauth2.client.registration.google.redirectUri : "http://localhost:8081/oauth/code/google"

      default.user.firstUserAsAdmin: "true"
      logging.level.root: INFO
    expose:
      - "8081"
    ports:
      - "8081:8081"
    depends_on:
      - postgres
  postgres:
    image: postgres:12.6
    environment:
      - POSTGRES_DB=ego
      - POSTGRES_PASSWORD=password
    expose:
      - "5432"
    ports:
      - "5432:5432"
    volumes:
      - "ego_data:/var/lib/postgresql/data"
volumes:
  ego_data: